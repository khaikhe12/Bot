#!/usr/bin/env python3
"""
Configura√ß√µes do Chatbot Barbearia
"""

import os
from typing import List

# Configura√ß√µes do Banco de Dados
DATABASE_URL = "sqlite:///./barbearia.db"

# Configura√ß√µes da API
API_HOST = "0.0.0.0"
API_PORT = 8000
API_TITLE = "Chatbot Barbearia"
API_VERSION = "1.0.0"

# Configura√ß√µes do Chatbot
BARBEIROS = ['Jo√£o', 'Carlos', 'Marcos']

# Hor√°rios de funcionamento (formato: HH:MM)
HORARIOS_DISPONIVEIS = [
    "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", 
    "12:00", "12:30", "13:30", "14:00", "14:30", "15:00", 
    "15:30", "16:00", "16:30", "17:00", "17:30", "18:30", 
    "19:00", "19:30"
]

# Configura√ß√µes de mensagens
MENSAGENS = {
    "boas_vindas": "üëã Ol√°! Bem-vindo √† barbearia!\n\nPara come√ßar, qual √© o seu nome?",
    "boas_vindas_retorno": "üëã Ol√° novamente, {nome}!\n\nEscolha uma op√ß√£o:\n1Ô∏è‚É£ - Agendar hor√°rio\n2Ô∏è‚É£ - Ver meus agendamentos\n3Ô∏è‚É£ - Cancelar agendamento\n4Ô∏è‚É£ - Falar com atendente",
    "menu_principal": "Escolha uma op√ß√£o:\n1Ô∏è‚É£ - Agendar hor√°rio\n2Ô∏è‚É£ - Ver meus agendamentos\n3Ô∏è‚É£ - Cancelar agendamento\n4Ô∏è‚É£ - Falar com atendente",
    "nome_invalido": "Por favor, informe um nome v√°lido:",
    "escolher_barbeiro": "Escolha um barbeiro:\n{barbeiros}",
    "escolher_horario": "Escolha um dos hor√°rios dispon√≠veis:\n{horarios}",
    "agendamento_confirmado": "‚úÖ Agendamento confirmado!\n\nüìÖ Data/Hora: {horario}\nüë®‚Äçüíº Barbeiro: {barbeiro}\nüÜî ID do agendamento: {id}\n\n1Ô∏è‚É£ - Agendar outro hor√°rio\n2Ô∏è‚É£ - Ver meus agendamentos\n3Ô∏è‚É£ - Cancelar agendamento\n4Ô∏è‚É£ - Falar com atendente",
    "agendamento_cancelado": "‚úÖ Agendamento ID {id} cancelado com sucesso!\n\n1Ô∏è‚É£ - Agendar hor√°rio\n2Ô∏è‚É£ - Ver meus agendamentos\n3Ô∏è‚É£ - Cancelar agendamento\n4Ô∏è‚É£ - Falar com atendente",
    "sem_agendamentos": "Voc√™ n√£o possui agendamentos ativos.\n\n1Ô∏è‚É£ - Agendar hor√°rio\n2Ô∏è‚É£ - Ver meus agendamentos\n3Ô∏è‚É£ - Cancelar agendamento\n4Ô∏è‚É£ - Falar com atendente",
    "agendamento_nao_encontrado": "Agendamento n√£o encontrado ou n√£o pertence a voc√™. Tente novamente:",
    "horario_indisponivel": "Esse hor√°rio acabou de ser agendado. Por favor, tente novamente.\nVoltando ao menu.",
    "sem_horarios": "Nenhum hor√°rio dispon√≠vel para esse barbeiro esta semana. Voltando ao menu principal.",
    "atendente": "Um atendente ir√° entrar em contato em breve. Obrigado!",
    "erro_generico": "Algo deu errado. Voltando ao menu.\n1Ô∏è‚É£ - Agendar hor√°rio\n2Ô∏è‚É£ - Ver meus agendamentos\n3Ô∏è‚É£ - Cancelar agendamento\n4Ô∏è‚É£ - Falar com atendente"
}

# Configura√ß√µes de valida√ß√£o
VALIDACAO = {
    "nome_min_length": 2,
    "max_horarios_exibidos": 5,
    "dias_futuros": 7
}

# Configura√ß√µes de desenvolvimento
DEBUG = os.getenv("DEBUG", "True").lower() == "true"
LOG_LEVEL = os.getenv("LOG_LEVEL", "info")

# Configura√ß√µes de seguran√ßa
SECRET_KEY = os.getenv("SECRET_KEY", "chatbot-barbearia-secret-key")
ACCESS_TOKEN_EXPIRE_MINUTES = 30

def get_barbeiros() -> List[str]:
    """Retorna a lista de barbeiros"""
    return BARBEIROS.copy()

def get_horarios_disponiveis() -> List[str]:
    """Retorna a lista de hor√°rios dispon√≠veis"""
    return HORARIOS_DISPONIVEIS.copy()

def get_mensagem(chave: str, **kwargs) -> str:
    """Retorna uma mensagem formatada"""
    mensagem = MENSAGENS.get(chave, "Mensagem n√£o encontrada")
    return mensagem.format(**kwargs) if kwargs else mensagem 